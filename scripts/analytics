#!/bin/bash
PROJECT_DIR="$(dirname "$(pwd)")"
# sed -i -e 's/\r$//' analytics
# If 'No such file or directory'
COMPOSE_FILE="$PROJECT_DIR/docker-compose.yaml"
if [ ! -f "$COMPOSE_FILE" ]; then
    echo "!!! docker-compose.yml not found in $PROJECT_DIR/ !!!"
    exit 1
fi


init_airflow() {
    echo "Airflow initialization..."
    docker-compose -f "$COMPOSE_FILE" up airflow-init
    echo "Airflow initialized."
}

install_and_run_services() {
    init_airflow
    echo "Initialize backend services..."
    docker-compose -f "$COMPOSE_FILE" up -d
    echo "Services started."
}

stop_containers() {
    if [ $# -eq 0 ]; then
        echo "Stop all services..."
        docker-compose -f "$COMPOSE_FILE" stop
    else
        echo "Stop specific services: $@"
        docker-compose -f "$COMPOSE_FILE" stop "$@"
    fi
    echo "Services stopped."
}

start_containers() {
    if [ $# -eq 0 ]; then
        echo "Start all services..."
        docker-compose -f "$COMPOSE_FILE" start
    else
        echo "Start specific services: $@"
        docker-compose -f "$COMPOSE_FILE" start "$@"
    fi
    echo "Services started."
}

down_containers() {
    echo "Down services..."
    docker-compose -f "$COMPOSE_FILE" down
    echo "Services turned off."
}

remove_containers() {
    echo "Down services and clear volumes..."
    docker-compose -f "$COMPOSE_FILE" down --volumes --remove-orphans
    echo "Volumes cleaned."
}

build_and_run_services() {
    if [ $# -eq 0 ]; then
        echo "Build and start all services..."
        docker-compose -f "$COMPOSE_FILE" up --build --force-recreate -d
    else
        echo "Build and start specific services: $@"
        docker-compose -f "$COMPOSE_FILE" up --build --force-recreate -d "$@"
    fi
}

case "$1" in
    init)
        init_airflow
        ;;
    install)
        install_and_run_services
        ;;
    stop)
        shift
        stop_containers "$@"
        ;;
    start)
        shift
        start_containers "$@"
        ;;
    down)
        down_containers
        ;;
    clear)
        remove_containers
        ;;
    build)
        shift
        build_and_run_services "$@"
        ;;
    *)
        echo "./analytics $0 {init | install | stop <> | start <> | down | clear | build <>}"
        echo "  init                    - Инициализация и запуск Airflow сервисов"
        echo "  install                 - Инициализация и запуск всех сервисов"
        echo "  stop <s1> <s2> ...      - Остановка всех сервисов или указанных сервисов"
        echo "  start <s1> <s2> ...     - Запуск всех сервисов или указанных сервисов после остановки"
        echo "  down                    - Остановка всех сервисов"
        echo "  clear                   - Остановка и очистка БД сервисов"
        echo "  build <s1> <s2> ...     - Пересборка образов всех сервисов или указанных сервисов и запуск"
        exit 1
esac